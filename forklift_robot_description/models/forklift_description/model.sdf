<?xml version="1.0" ?>
<sdf version="1.5">
  <model name='forklift_robot'>
  <static>false</static>
  <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
  <link name="base_footprint"/>
    <link name='base_link'>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>500</mass>
        <inertia>
          <ixx>206</ixx>
          <ixy>0</ixy>
          <ixz>-23</ixz>
          <iyy>389</iyy>
          <iyz>0</iyz>
          <izz>316</izz>
        </inertia>
      </inertial>
      <collision name='base_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/base_link.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='base_visual'>
        <pose>-1.0795 -0.5334 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/base_link.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
  
    <!-- *********************** IMU SENSOR SETUP **************************  -->
  <link name="imu_link">
    <gravity>true</gravity>
    <sensor name="bmb_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="basic_mobile_bot_imu" filename="libgazebo_ros_imu_sensor.so">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>imu_link</frame_name>
        <ros>
          <namespace>/imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>

  <!-- *********************** GPS SETUP *********************************  -->
  <link name="gps_link">
    <sensor name="bmb_gps" type="gps">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-2</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="basic_mobile_bot_gps" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <remapping>~/out:=gps/fix</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>

  <!-- ****************************** LIDAR *****************************    -->
  <link name="lidar_link">    
    <inertial>
      <pose>0.215 0 0.13 0 0 0</pose>
      <inertia>
        <ixx>0.001</ixx>
        <ixy>0.000</ixy>
        <ixz>0.000</ixz>
        <iyy>0.001</iyy>
        <iyz>0.000</iyz>
        <izz>0.001</izz>
      </inertia>
      <mass>0.114</mass>
    </inertial>

    <collision name="lidar_collision">
      <pose>0.215 0 0.13 0 0 0</pose>
      <geometry>
        <cylinder>
          <radius>0.0508</radius>
          <length>0.18</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="lidar_visual">
      <pose>0.215 0 0.13 0 0 0</pose>
      <geometry>
        <cylinder>
          <radius>0.0508</radius>
          <length>0.18</length>
        </cylinder>
      </geometry>
      <material>
        <ambient>0.0 0.0 0.0 1.0</ambient>
        <diffuse>0.0 0.0 0.0 1.0</diffuse>
        <specular>0.0 0.0 0.0 1.0</specular>
        <emissive>0.0 0.0 0.0 1.0</emissive>
      </material>
    </visual>

    <sensor name="lidar" type="ray">
      <pose>0.215 0 0.215 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>120</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>15.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </link>



    <link name='fork'>
      <pose relative_to='base_to_fork'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>100</mass>
        <inertia>
          <ixx>0.2</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.3</iyy>
          <iyz>0</iyz>
          <izz>0.4</izz>
        </inertia>
      </inertial>
      <collision name='fork_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/fork.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='fork_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/fork.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
      <joint name='base_to_fork' type='prismatic'>
      <pose relative_to='base_link'>1.0795 -0.3686 0 0 -0 0</pose>
      <parent>base_link</parent>
      <child>fork</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0</lower>
          <upper>2</upper>
          <effort>100</effort>
          <velocity>0.1</velocity>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <joint name='base_to_wheel_back_left' type='revolute'>
      <pose relative_to='base_link'>-0.7865 -0.5334 0.2032 0 -0 0</pose>
      <parent>base_link</parent>
      <child>wheel_back_left</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>1000</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_back_left'>
      <pose relative_to='base_to_wheel_back_left'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>5</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0015</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='wheel_back_left_collision'>
        <pose>0 0.1 0 1.571 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.2</length>
            <radius>0.21</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='wheel_back_left_visual'>
        <pose>-0.2032 0 -0.2032 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='base_to_wheel_back_right' type='revolute'>
      <pose relative_to='base_link'>-0.7502 0.3302 0.2032 0 -0 0</pose>
      <parent>base_link</parent>
      <child>wheel_back_right</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>1000</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_back_right'>
      <pose relative_to='base_to_wheel_back_right'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>5</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0015</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='wheel_back_right_collision'>
        <pose>0 0.1 0 1.571 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.2</length>
            <radius>0.21</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='wheel_back_right_visual'>
        <pose>-0.2032 0 -0.2032 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='base_to_wheel_front_left' type='revolute'>
      <pose relative_to='base_link'>0.6722 0.3302 0.2032 0 -0 0</pose>
      <parent>base_link</parent>
      <child>wheel_front_left</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>1000</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_front_left'>
      <pose relative_to='base_to_wheel_front_left'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>5</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0015</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='wheel_front_left_collision'>
        <pose>0 0.1 0 1.571 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.2</length>
            <radius>0.21</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='wheel_front_left_visual'>
        <pose>-0.2032 0 -0.2032 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='base_to_wheel_front_right' type='revolute'>
      <pose relative_to='base_link'>0.6722 -0.5334 0.2032 0 -0 0</pose>
      <parent>base_link</parent>
      <child>wheel_front_right</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>1000</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>



    <link name='wheel_front_right'>
      <pose relative_to='base_to_wheel_front_right'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>5</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0015</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='wheel_front_right_collision'>
        <pose>0 0.1 0 1.571 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.2</length>
            <radius>0.21</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='wheel_front_right_visual'>
        <pose>-0.2032 0 -0.2032 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/rshah/Documents/Personal_Repos/SImple_3wheel_robot/src/forklift_robot_description/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="imu_joint" type="fixed">
    <parent>base_link</parent>
    <child>imu_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>  

  <joint name="gps_joint" type="fixed">
    <parent>base_link</parent>
    <child>gps_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>  
  
  <joint name="lidar_joint" type="fixed">
    <parent>base_link</parent>
    <child>lidar_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>


<!-- *********************** WHEEL ODOMETRY ***************************    -->
  <plugin name="basic_mobile_bot_diff_drive" filename="libgazebo_ros_diff_drive.so">

    <update_rate>30</update_rate>

    <!-- wheels -->
    <left_joint>base_to_wheel_back_left</left_joint>
    <right_joint>base_to_wheel_back_right</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.86</wheel_separation>
    <wheel_diameter>0.15</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- Receive velocity commands on this ROS topic -->
    <command_topic>cmd_vel</command_topic>

    <!-- output -->
    <!-- When false, publish no wheel odometry data to a ROS topic -->
    <publish_odom>true</publish_odom>

    <!-- When true, publish coordinate transform from odom to base_footprint -->
    <!-- I usually use the robot_localization package to publish this transform -->   
    <publish_odom_tf>false</publish_odom_tf>
    
    <!-- When true, publish coordinate transform from base_link to the wheels -->
    <!-- The robot_state_publisher package is often used to publish this transform -->   
    <publish_wheel_tf>false</publish_wheel_tf>

    <odometry_topic>odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_footprint</robot_base_frame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometry_source>1</odometry_source>

    <!-- Change the ROS topic we will publish the odometry data to -->
    <ros>
      <remapping>odom:=wheel/odometry</remapping>
    </ros>

  </plugin>

 <!-- *********************** JOINT STATE PUBLISHER *********************   -->
  
  <plugin name="basic_mobile_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
    <ros>
      <remapping>~/out:=joint_states</remapping>
    </ros>
    <update_rate>10</update_rate>
    <joint_name>base_to_wheel_back_left</joint_name>
    <joint_name>base_to_wheel_back_right</joint_name>
    <joint_name>base_to_wheel_front_right</joint_name>
    <joint_name>base_to_wheel_front_left</joint_name>
    <joint_name>base_to_fork</joint_name>
  </plugin> 
  </model>
</sdf>